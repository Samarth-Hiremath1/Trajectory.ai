apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: goaltrajectory-ai
  labels:
    app: goaltrajectory-ai
    component: backend
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: goaltrajectory-ai
      component: backend
  template:
    metadata:
      labels:
        app: goaltrajectory-ai
        component: backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: backend-service-account
      priorityClassName: goaltrajectory-ai-priority
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: backend
        image: goaltrajectory-ai/backend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        # Environment variables from ConfigMap
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: LOG_FORMAT
        - name: CHROMA_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: CHROMA_HOST
        - name: CHROMA_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: CHROMA_PORT
        - name: WORKERS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: WORKERS
        - name: MAX_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MAX_CONNECTIONS
        - name: TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: TIMEOUT
        # Sensitive environment variables from Secrets
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: SUPABASE_URL
        - name: SUPABASE_SERVICE_ROLE_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: SUPABASE_SERVICE_ROLE_KEY
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: GEMINI_API_KEY
        - name: OPENROUTER_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: OPENROUTER_API_KEY
        - name: HUGGINGFACE_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: HUGGINGFACE_API_KEY
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: JWT_SECRET
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: cache-volume
          mountPath: /app/cache
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: cache-volume
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30