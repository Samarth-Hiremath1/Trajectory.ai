apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: goaltrajectory-ingress
  namespace: goaltrajectory
  annotations:
    # Ingress controller class
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-minute: "60"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
    
    # CORS configuration for API endpoints
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://goaltrajectory.ai"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Request size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # Timeout configuration
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Buffer configuration for better performance
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    
spec:
  tls:
    - hosts:
        - goaltrajectory.ai
        - www.goaltrajectory.ai
        - api.goaltrajectory.ai
      secretName: goaltrajectory-tls
  rules:
    # Main domain - Frontend
    - host: goaltrajectory.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 3000
    
    # WWW redirect to main domain
    - host: www.goaltrajectory.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 3000
    
    # API subdomain - Backend
    - host: api.goaltrajectory.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 8000
    
    # Alternative path-based routing (if subdomain not preferred)
    - host: goaltrajectory.ai
      http:
        paths:
          # API endpoints
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 8000
          
          # Health check endpoints
          - path: /health
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 8000
          
          # Static assets and frontend (catch-all)
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 3000

---
# Ingress for development/staging environment
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: goaltrajectory-ingress-dev
  namespace: goaltrajectory-dev
  annotations:
    kubernetes.io/ingress.class: "nginx"
    
    # Development SSL (self-signed or staging cert)
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    
    # Relaxed rate limiting for development
    nginx.ingress.kubernetes.io/rate-limit-connections: "50"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-minute: "300"
    
    # Basic security headers for development
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
    
    # CORS configuration for development
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
spec:
  tls:
    - hosts:
        - dev.goaltrajectory.ai
        - api-dev.goaltrajectory.ai
      secretName: goaltrajectory-dev-tls
  rules:
    # Development frontend
    - host: dev.goaltrajectory.ai
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 8000
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 3000
    
    # Development API
    - host: api-dev.goaltrajectory.ai
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 8000